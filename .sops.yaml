# This file uses YAML anchors which allows reuse of multiple keys
# without having to repeat yourself.
# Also see https://github.com/Mic92/dotfiles/blob/master/nixos/.sops.yaml
# for a more complex example.
keys:
  # In order to generate a new key set for a new user, run the following commands:
  # ```sh
  # $ # on linux:
  # $ sops_dir=~/".config/sops/age"
  # $ # on macOS:
  # $ sops_dir=~/"Library/Application Support/sops/age"
  # $ mkdir -p "$sops_dir"
  # $ age-keygen -o "$sops_dir/keys.txt"
  # $ cat "$sops_dir/keys.txt" | sed -nEe 's/.+public key:\s+(.*)$/\1/mip'
  # ```
  # Then add that value to a new key here:
  users:
    - &user_dudeofawesome 'age17dnfg660q6f6xv634dlsqzt9arungk5k3xytd68m2c94tqa3wqtqv7ew0d'
    - &user_josh 'age1nu45m5ht7x7h59t4x8kalx9j084tqty27rw97xl63fp85l8w45qspgdqt0'

  # In order to generate a new public key for a new cluster, run the following commands:
  # ```sh
  # $ age-keygen -o age.agekey
  # ```
  # Then add the public key to a new key here:
  clusters:
    - &cluster_doa-cluster 'age1meara2mcpfxz9xzj0q0tur82a09paacevld6vnpfgkht2w8yayyq8y35pc'

  groups:
    all-age-keys: &all-age-keys
      age:
        - *user_dudeofawesome
        - *user_josh
        - *cluster_doa-cluster

  # When adding new keys, make sure to update the encrypted files:
  # `sops updatekeys ENCRYPTED_FILE`
  # https://github.com/getsops/sops#27adding-and-removing-keys
  # or, to update all files:
  # `find . \( -wholename "*/secrets/*.yaml" -o -name "secrets.yaml" \) -type f -exec sops updatekeys --yes {} \;`

creation_rules:
  # Clusters
  - path_regex: '.+/secrets?\.ya?ml$'
    encrypted_regex: '^(data|stringData)$'
    key_groups:
      - *all-age-keys
  - path_regex: 'clusters/doa-cluster/.+secrets?\.ya?ml$'
    key_groups:
      - age:
          - *user_dudeofawesome
          - *user_josh
          - *cluster_doa-cluster

stores:
  yaml:
    indent: 2
  json:
    indent: 2
  json_binary:
    indent: 2
